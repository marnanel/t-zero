
Class Thing
with
    ! Surprisingly, this makes "look" print
    ! the "initial" property even when the
    ! object has moved.
    describe [; ];

Attribute legible;

! XXX Split out grammar extensions to separate file

Extend 'read' first * legible -> Read;

Extend 'leave' first
    * 'no' 'stone' 'unturned' -> LeaveNoStone;

Verb 'stone' *
    creature -> Attack;

[ ReadSub;
    << Examine noun >>;
    ];

[ LeaveNoStoneSub;

    if (Claw has general) {
        ! We've been here before
        "Once again, you overturn every stone, but to no avail--not even
a nestling centipede is forthcoming.  Every underside becomes a
topside but the overall pattern of stones remains constant.";

    }

    move Claw to location;
    give Claw general;

    Achieved(0);

    "With reckless abandon, you turn over every stone in sight,
avoiding the many small avalanches you launch in the process.
Under the last, overturned stone you find what looks like
the disembodied claw of some prehistoric bird.";

];

Attribute thighpocketwants; ! Your thigh pocket wants this

Thing CompassThing "Compass"
with
   name "compass",
   initial "There is a strange geo-temporal compass here.",
   description "The compass contains a needle balanced on a central pivot.
Superimposed on the rim are two concentric sets of markings.
One indicates the 8 cardinal directions.  The other indicates
the 24 hours of the day.  Thus, north corresponds to high 
noon and south to midnight.  A stopwatch-like plunger and a
dual-setting slider cap the whole affair.";

Thing PinkSlip "Pink Slip"
has
    legible
with
   name "pink" "slip",
   initial "A pink slip has been hastily abandoned here.",
   description "A faint scribbling, pink on pink, is visible on the slip.  You
remember being handed your walking papers--and, indeed, you have
been walking!",
    before [;
        Consult, Read:
        "In dark pink script, the light pink slip officiously reads:^^
        
        ~Our project is too near completion to allow us to keep in our
        employment a custodian who is prone to sweep subatomic particles
        under the carpet along with the dust.  Also, after repeated
        warnings, you have approached the restricted areas once too
        often.  You may not enter the museum again--your personal
        effects will be delivered to you.~^^
        
        The missive closes with ~Counting down from ten~ and is signed
        with the name Count Zero followed by a flourish and a slashed zero.
        In addition, a single word has been faintly outlined in bold
        capital letters by an impression from light blue carbon paper.
        However, with all that red upon red, the word is not readable in
        the current light.";
    ];

Thing JournalPage "Journal Page"
with
    name "journal" "page",
    ! XXX this isn't just the initial
    initial "A page from your journal has been left here where anyone could read it!",
    description "On the journal page you've scribbled the following cryptic instructions:
    ^^
    Shadow the sun . . .
    ^^
    A spire to the sky at noon.^
    Into no man's land at nine.^^
    
    Read in the red light at noon.^
    Transcribe from the violet light at nine.";

Thing KhakiFatigues "Khaki Fatigues"
has
    worn proper pluralname container open
with
    name "khaki" "fatigues" "pants",
    description "As befits the acquisitive adventurer,
    your khaki fatigues are
    commodious. Two pockets in particular catch your attention--
    a fob pocket and a thigh pocket.";

Thing FobPocket "Fob Pocket" KhakiFatigues
has
    container open
with
    name "fob" "pocket",
    description "Your fob pocket is just the right size for a compass.";

Thing ThighPocket "Thigh Pocket" KhakiFatigues
has
    container open
with
    name "thigh" "pocket",
    description
    "Your thigh pocket is not especially spacious and seems to have
    a mind of its own about what goes in and out.",
    react_before [;
        Take: if (noun has thighpocketwants) {
                move noun to self;
                "You put the bad seed in your pocket.  Actually, it's more like
                your pocket swoops out of its lining to grab the bad seed.";
            }
    ];

Thing RedSuspenders "Red Suspenders"
has
    worn proper pluralname
with
    name "red" "suspenders" "braces",
    description "Your red suspenders are real snappy.
    Their two elastic bands can be
    crossed over your back to clasp your pants in place.";

Thing Poppy "Poppy" FieldOfPoppies
has
    scenery
with
    name "poppy" "flower",
    description "Although brighter than anything else in this muted landscape,
    the poppies still have a washed-out look.  Their crinkled petals
    are slightly brown at the edges and the dry rattleheads of the
    seedpods have scattered without bursting.",
    after [;
        Examine:
            print "^";
            give DryHusk ~concealed;
            print (string) DryHusk.initial;
    ];

Thing DryHusk "Dry Husk" FieldOfPoppies
has
    concealed
with
    name "dry" "husk" "seed" "seedpod",
    initial "The dry husk of a hard seedpod, previously unremarked,
    almost escapes your notice.",
    before [;
        Take:
        print "As you take the seed, the seedpod bursts.^^";
        move BadSeed to location;
        remove self;

        << Take BadSeed >>;
        ];

Thing BadSeed "Bad Seed"
has
    thighpocketwants
with
    initial "A bad seed lies here, not merely dormant, but dead.",
    description
    "This is a bad seed. Even with the fertilizer from a herd of
    elephants, it's not about to grow.";

Thing Stone "Stone" FieldOfStone
has
    scenery
with
    name "stone" "stones",
    description
        "The innumerable stones are evenly spaced across the sloping field.",
    before [;
        Exit:
            ! "Leave stone"
            "Leave well enough alone.";
            ! "Leave no stone unturned" is handled
            ! by LeaveNoStoneSub, q.v.
        ];

Thing Claw "Prehistoric Claw"
with
    name "prehistoric" "claw",
    description
        "The webbed husk of leathery, prehistoric claw curls in on itself here.";

Thing Terns "Terns" FieldOfStone
has
    scenery animate
with
    ! XXX when the stoned tern is present, these should not
    ! be a possible referent of "tern"
    name "terns" "tern" "bird" "birds" "flock",
    description "For every stone on the field, there must be a tern in the sky.
    They tirelessly twirl in a circular swirl.",
! Current state:
!   0 = the terns have done nothing to you
!   1 = bird poo missed you
!   2 = bird poo almost hits you
!        (now you can stone the terns)
!   3 = you have stoned the terns
    current_state 0,

    before [;

        Attack:
            switch (self.current_state) {
                    0: 1: "That's another turn down the drain. The terns have done nothing to
you. At least not yet--you think as you take a side glance at the speckling of
the stones.";

                    3: "You've already settled your score with the terns (and turned your
score in the process).";
            }

            ! if we get here, self.current_state must be 2

            Achieved(1);
            move StonedTern to location;
            move Feather to location;
            ! The original doesn't show the feather immediately
            ! after this. I don't know why. Is the feather
            ! actually present? Is this an intended feature?

            print "Well, they do seem to be asking for it . . . so, here goes . . . you
heave a random stone with all your might, giving it a sharp, curving spin. The
terns protectively swirl in quicker, tighter circles until they form a dark
funnel in the sky. The stone nicks a particularly plump specimen which starts
to slide down the vortex. That is indeed a tern down the drain! The birds
disperse and start their slow circling again.^^At the last minute, the falling
tern attempts to right itself and rejoin the flock. Instead, it turns to stone
and plummets. In addition, a feather has been knocked loose. The feather turns
graceful somersaults in the air before finally coming to rest at your feet.^";

            <<Look>>;
    ],

    each_turn [;
        if (random(3)~=1) {
                rtrue;
        }

        switch (self.current_state) {

         0:
            self.current_state = 1;
         "Something plummets from the sky and barely misses you. Whatever it
was, it sears and speckles a nearby stone with an acid-like hiss.";

        1:
            self.current_state = 2;
         "Something plummets from the sky and almost brushes against your
hair. What? Are the terns taking aim? If this continues, you'll be seared,
speckled, and scalped.";

        ! XXX are there any more? Test and find out.

        }

    ];

Thing StonedTern "Stoned Tern"
with
    name
        "stoned" "tern" "bird",
    initial
        "The dead weight of a stoned tern sits heavily here.",
    description
        "The stoned tern is dead weight personified.",
        before [;

        Take:
        "You might as well turn to stone.";

        Touch:
        ! I have no clue what DC was thinking here
        deadflag = 1;
         "You touch the stone tern and immediately turn to stone. You become
         somewhat of an international celebrity as well as a local landmark, attracting
         curious tourists from far-flung lands. A legend develops that you are a clue
         to an intricate puzzle. Scholars peer at you as they make jottings on cryptic
         pads. After eons and eons, you develop fissures and cracks and eventually blow
         away to become the dust that settles under immovable objects in adventure
         games.";

        ];

Thing Feather "Feather"
with
    name
        "feather",
    initial
        "A feather has come to rest at your feet here.",
    description
        "The feather will serve nicely as a writing implement--but you need
    some type of ink.";

Thing Knicknacks "Knicknacks" Cottage
with
    description
        ! This is one of the few strings which assigns a gender
        ! to the player
        "Well, they're odds and ends that the caretaker, namely you,
has pilfered from the museum over time to enhance the modest
decor of his cottage.";

! XXX Original inventory description is like this:
!  An Empty Jam Jar.
!    The empty jam jar is closed.
! XXX This should be a container, obviously.

Thing EmptyJamJar "Empty Jam Jar" PresentPantry
with
    name
        "empty" "jam" "jar" "jamjar",
    initial
        "An empty jam jar stands here, licked clean.",
    description
        "Well, it looks like there's no jam today.";

! The lever in the original game is actually two objects.
! When you first pick it up, the second lever replaces
! the first. We're modelling this with "general" to
! show that the lever is the "second" leaver.
!
! XXX I think you can pull the lever if self hasnt general.
! XXX I don't know how you can un-general the lever.
Thing Lever "Lever" Coldhouse
with
    name
        "lever",
    initial
        [;
            if (self has general) {
                "A lever is lying around here, providing no leverage at all.";
            } else {
                "A lance-like lever sticks out of an indentation here.";
            }
        ],
    description
        [;
            if (self has general) {
                "The handle of the lever is carved with the image of a wise man with
         glazed-over eyes made of inlaid abalone shell. This lever is as elegant as an
         English walking stick and pointed at the tip like a lance.";
            } else {
                "The lever is used to control the apertures between coldhouse slats.";
            }
        ],
    before
        [;
            Take:
                give self general;

            Pull:
                if (self has general) {
                        ! not our problem; carry on
                        rfalse;
                }

                print "A cold blast of arctic air howls through the slats as you open them.";

                if (Token hasnt general) {
                    move Token to location;
                    give Token general;
                    Achieved(2);

                   "^^With the cold blast of air comes a cardboard token minted with the
                frigid image of Count Zero.";

                }

        ];

! "general" if it hasn't appeared before
Thing Token "Token"
with
    name
        "token",
    initial
        "A token, potent with buying power, takes up space here.",
    description
        "The token is rather large for coinage. It is about the size of a
    legal pad and contains a picture of Count Zero in Roman profile and all sorts
    of little textual scribblings that are unreadable.";


